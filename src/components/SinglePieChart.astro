---
const { percent, pie_header } = Astro.props;
---

<div class="container">
  <div class="pie_chart">
    <h4 class="pie_precent">{percent}</h4>
    <div class="parent" style={"--percent:" + { percent } + ";"}>
      <div class="child"></div>
    </div>
  </div>
  <h4>{pie_header}</h4>
</div>

<style>
  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    & .pie_chart {
      display: grid;
      grid-auto-rows: auto;

      & .parent {
        grid-area: 1 /1 / span 2 / span 2;
      }

      & h4 {
        display: grid;
        place-content: center;
        grid-area: 1 /1 / span 2 / span 2;
        z-index: 1;
      }
    }
  }

  h4 {
    text-transform: capitalize;
  }

  @property --percent {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }

  .parent {
    --pie-color: color-mix(
      in oklab,
      var(--yellow-color),
      var(--mix-with, 0% #fff)
    );

    --dark-pie-color: color-mix(
      in oklab,
      var(--yellow-color),
      var(--mix-with, 10% #000)
    );

    --offset-pos: 5px;
    animation: --pie 3s linear infinite;

    border: var(--offset-pos) solid transparent;
    background:
      linear-gradient(var(--pie-color), var(--pie-color)) padding-box,
      conic-gradient(var(--white-color) var(--percent), var(--dark-pie-color) 0)
        border-box;
    position: relative;

    .child {
      aspect-ratio: 1;
      border-radius: 50%;
      width: 15px;
      background: var(--black-color);
      outline: var(--white-color) 4px solid;
      position: absolute;
      offset-path: border-box;
      offset-distance: var(--percent);
      offset-anchor: 50% calc(50% - var(--offset-pos) / 2);
    }
  }

  @keyframes --pie {
    from {
      --percent: 0%;
    }
    to {
      --percent: 85%;
    }
  }

  .parent {
    aspect-ratio: 1;
    width: 150px;
    border-radius: 1e5px;
    margin-inline: auto;
  }
</style>
