---
const { bg_color } = Astro.props;
---

<div class={bg_color + " " + "full-bleed"}>
  <div class="div_containers">
    <div class="text_button">
      <div class="text_container">
        <p class="tag">growing with our clients</p>
        <h2>our core values & principles</h2>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptates
          nostrum excepturi magni aperiam reiciendis nam pariatur! Odio, non ab
          magnam, beatae vitae pariatur molestias nam id obcaecati, excepturi
          fuga. Voluptatum.
        </p>
      </div>
      <slot name="btn_slot" />
    </div>

    <div class="container">
      <h6>creative ideas</h6>
      <p>
        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Saepe
        obcaecati, odio temporibus quaerat quae quo error minima quisquam culpa.
      </p>
      <a href="/case_study">Read more</a>
    </div>

    <div class="container">
      <h6>best features</h6>
      <p>
        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Saepe
        obcaecati, odio temporibus quaerat quae quo
      </p>
      <a href="/case_study">Read more</a>
    </div>

    <div class="container">
      <h6>experience</h6>
      <p>
        Lorem ipsum dolor sit amet consectetur adipisicing elit. A et iusto
        facere! Magnam eius officiis, porro rerum atque, vero veritatis sunt
        reprehenderit illo impedit tempore blanditiis iusto debitis corrupti
        perferendis.
      </p>
      <a href="/about">Read more</a>
    </div>

    <div class="container">
      <h6>easy solutions</h6>
      <p>
        Lorem ipsum dolor sit amet consectetur adipisicing elit. A et iusto
        facere! Magnam
      </p>
      <a href="/about">Read more</a>
    </div>
  </div>
</div>

<style>
  .div_containers {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 2rem;

    & :is(h2, h6) {
      text-transform: capitalize;
    }
  }
  .text_button {
    grid-column: 1 / span 4;
    display: grid;
    grid-template-columns: subgrid;

    gap: 1rem;
    & .text_container {
      display: grid;
      grid-column: 1 / span 2;
      gap: 1rem;
      & *:not(.tag) {
        color: var(--gray-color);
      }
    }
  }

  /*******container styles*******/
  .container {
    display: flex;
    flex-flow: wrap row;
    gap: 1rem;
    background-color: gray;
    align-self: start;
    padding: var(--big-bottom-padding);
    background-color: var(--gray-color);
    border-radius: var(--small-border-radius);
  }

  .container::before {
    content: url(/images/ideas.svg);
    display: inline-block;
  }

  .container a::after {
    content: url(/images/arrow.svg);
    display: inline-flex;
  }
  .container a {
    text-decoration: none;
    text-transform: capitalize;
    display: flex;
    gap: 1rem;
    --a-color: color-mix(
      in oklab,
      var(--black-color),
      var(--mix-with, 0% #fff)
    );
    color: var(--a-color);
    border-radius: var(--border-radius);
    &:hover {
      --mix-with: 70% #fff;
    }
    &:active {
      --mix-with: 20% #000;
    }
  }
  .black_bg {
    padding: 100px;
    background-color: var(--black-color);
  }

  .gray_bg {
    padding: 100px;
    background-color: var(--gray-color);
  }
</style>
